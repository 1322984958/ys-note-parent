<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <!-- 配置Log4j监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- 日志配置文件 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:properties/log4j.properties</param-value>
    </context-param>
    <!-- 60s 检测日志配置 文件变化 -->
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>
    <!-- 默认的spring配置文件是在WEB-INF下的applicationContext.xml -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:applicationContext.xml
            classpath*:applicationContext-shiro.xml
        </param-value>
    </context-param>
     <context-param>  
        <param-name>webAppRootKey</param-name>   
        <param-value>wc-management-web.root</param-value>  
    </context-param>
    <listener> 
        <listener-class>com.gkys.web.security.listener.SystemEvenmentListener</listener-class>
    </listener> 
    <listener> 
        <listener-class>com.gkys.web.wx.listener.TokenManagerListener</listener-class>
    </listener> 
    <!-- 强制进行转码 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
    <!-- shiroFilter : DelegatingFilterProxy作用是自动到spring容器查找名字为shiroFilter（filter-name）的bean并把所有Filter的操作委托给它。然后将shiroFilter配置到spring容器即可 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- Modeler的Rest服务 -->
	<servlet>
		<servlet-name>ModelRestServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:springMVC-activiti.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>ModelRestServlet</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping>
    <!-- springMVC的核心控制器 -->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:springMVC-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- 兼容put请求 -->
	<filter>
	  <filter-name>HiddenHttpMethodFilter</filter-name>
	  <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
	  <filter-name>HiddenHttpMethodFilter</filter-name>
	  <servlet-name>DispatcherServlet</servlet-name>
	</filter-mapping>
    <!--CXF配置 -->
<!--     <servlet> -->
<!--         <servlet-name>CXFServlet</servlet-name> -->
<!--         <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class> -->
<!--         <load-on-startup>2</load-on-startup> -->
<!--     </servlet> -->
<!--     <servlet-mapping> -->
<!--         <servlet-name>CXFServlet</servlet-name> -->
<!--         <url-pattern>/cxf/*</url-pattern> -->
<!--     </servlet-mapping> -->
    <!-- Druid连接池监控页面 -->
    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
        <init-param>
	      <param-name>resetEnable</param-name>
	      <param-value>true</param-value>
	    </init-param>
	    <init-param>
	      <param-name>loginUsername</param-name>
	      <param-value>admin</param-value>
	    </init-param>
	    <init-param>
	      <param-name>loginPassword</param-name>
	      <param-value>admin</param-value>
	    </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>
    <!-- 图形验证码 -->
  	<servlet>
    	<servlet-name>CaptchaServlet</servlet-name>
    	<servlet-class>com.gkys.web.servlet.CaptchaServlet</servlet-class>
  	</servlet>
  	<servlet-mapping>
    	<servlet-name>CaptchaServlet</servlet-name>
    	<url-pattern>/image/captcha</url-pattern>
  	</servlet-mapping>
    <!-- session配置 -->
    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>
    <!-- 欢迎页面 -->
    <welcome-file-list>
        <welcome-file>/views/index.html</welcome-file>
    </welcome-file-list>
    <!-- <error-page>
         <error-code>404</error-code>
         <location>/WEB-INF/jsp/manage/404.jsp</location>
     </error-page>
     <error-page>
         <error-code>500</error-code>
         <location>/WEB-INF/jsp/manage/500.jsp</location>
     </error-page>-->
     <!-- 错误页面
     <error-page>
         <exception-type>org.apache.shiro.authc.UnknownAccountException</exception-type>
         <location>/WEB-INF/index.jsp</location>
     </error-page>
     <error-page>
         <error-code>403</error-code>
         <location>/WEB-INF/jsp/manage/403.jsp</location>
     </error-page>
     <error-page>
         <error-code>500</error-code>
         <location>/WEB-INF/jsp/manage/500.jsp</location>
     </error-page>
     <error-page>
         <exception-type>java.lang.Throwable</exception-type>
         <location>/WEB-INF/jsp/manage/error.jsp</location>
     </error-page>-->
</web-app>