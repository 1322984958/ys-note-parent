<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <description>apache shiro配置</description>

	 <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
         <property name="realms">
             <list> 
                 <ref bean="securityRealm"/> 
             </list>
         </property>
        <!-- 注入session管理器-->
        <property name="sessionManager" ref="sessionManager" />
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>
    
  	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">  
	    <property name="usernameParam" value="username"/>  
	    <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe" />
	    <property name="failureKeyAttribute" value="shiroLoginFailure" />
	    <property name="loginUrl" value="/views/login.html"/>
        <property name="successUrl" value="/index.html"/>
	</bean>

    <!--验证码-->
<!--    <bean id="sCaptchaValidateFilter" class="com.gkys.common.security.filter.SCaptchaValidateFilter"> -->
        <!-- 是否启用验证码 从属性配置文件中读取，可以灵活配置-->
<!--         <property name="captchaDisabled" value="false"/> -->
<!--    </bean> -->

    <!-- 会话DAO，可重写，持久化session -->
    <bean id="sessionDao" class="com.gkys.web.security.session.ShiroSessionDao"/>

    <!-- 会话监听器 -->
    <bean id="sessionListener" class="com.gkys.web.security.listener.ShiroSessionListener"/>

    <!-- session工厂 -->
    <bean id="sessionFactory" class="com.gkys.web.security.session.ShiroSessionFactory"/>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true-->
        <property name="deleteInvalidSessions" value="false"/>
        <!-- 是否开启会话验证器任务 默认true -->
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionFactory" ref="sessionFactory"/>
<!--         <property name="sessionDAO" ref="sessionDao"/> -->
<!--         <property name="sessionListeners" ref="sessionListener"/> -->
        <property name="sessionIdCookie">
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <constructor-arg name="name" value="${session.id}"/>
            </bean>
        </property>
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- rememberMe缓存cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <!-- 不会暴露给客户端 -->
        <property name="httpOnly" value="true"/>
        <!-- 记住我cookie生效时间 -->
        <property name="maxAge" value="${shiro.rememberMe.timeout}"/>
        <!-- Cookie名称 -->
        <property name="name" value="${rememberMe.id}"/>
    </bean>

	<bean id="anyRoleFilter" class="com.gkys.web.security.filter.AnyRoleAuthorizationFilter"></bean>

    <!-- 自定义过滤器链管理 -->
	<bean id="filterChainManager" class="com.gkys.web.security.filter.CustomDefaultFilterChainManager">
		<property name="loginUrl" value="http://localhost:8080/gkys-web/views/login.html" />
		<property name="successUrl" value="/member/index.html"/>
		<property name="unauthorizedUrl" value="/unauthorized.html" />
		<property name="customFilters">
			<util:map>
				<!-- 定义自己的过滤器注册到shiro过滤器链中 -->
<!--                 <entry key="sCaptchaValidateFilter" value-ref="sCaptchaValidateFilter" /> -->
                <entry key="authc" value-ref="formAuthenticationFilter" />
 				<entry key="anyRole" value-ref="anyRoleFilter" />
			</util:map>
		</property>
		<property name="defaultFilterChainDefinitions">
			<value>
                /assets/**=anon <!-- 静态资源允许访问 -->
                /editor-app/** = anon
                /modeler.html = anon
                /views/** = anon
                /js/** = anon
                /css/** = anon
                /images/** = anon
                /fonts/** = anon
                /fileUpload/** = anon
                /qrCode/** = anon
                /app/** = anon
                /favicon.ico = anon
                /image/captcha = anon
                /unauthorized.html = anon
                /wx/** = anon
                /api/login = anon
                /service/** = anon
                /api/** = authc <!-- 其他资源需要认证 sCaptchaValidateFilter,-->
<!--                 /login.do = authc -->
                /** = authc
			</value>
		</property>
	</bean>
	
	<bean id="filterChainResolver" class="com.gkys.web.security.filter.CustomPathMatchingFilterChainResolver">
		 <property name="customDefaultFilterChainManager" ref="filterChainManager"/>
	</bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
    </bean>
	
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="shiroFilter" />
		<property name="targetMethod" value="setFilterChainResolver" />
		<property name="arguments" ref="filterChainResolver" />
	</bean>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <!-- 权限的一些灵活配置-->
    <!-- 加密服务 -->
    <bean id="encryptService" class="com.gkys.web.security.credential.MD5EncryptService">
        <!-- 是否启用盐值加密 -->
        <property name="saltDisabled" value="${security.saltDisabled}"></property>
        <!--加密次数-->
        <property name="hashIterations" value="${security.hashIterations}"></property>
    </bean>
    
    <!-- shiro注解 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>      
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>